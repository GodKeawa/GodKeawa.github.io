<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>GodKe.BLOG</title><link>https://godke.blog/</link><description>Recent content on GodKe.BLOG</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>3601262198@qq.com (GodKe)</managingEditor><webMaster>3601262198@qq.com (GodKe)</webMaster><copyright>Copyright © 2023 GodKe. All Rights Reserved.</copyright><lastBuildDate>Mon, 03 Jun 2024 15:51:38 +0800</lastBuildDate><atom:link href="https://godke.blog/index.xml" rel="self" type="application/rss+xml"/><item><title>破解游戏文件加密</title><link>https://godke.blog/posts/tech/%E7%A0%B4%E8%A7%A3%E6%B8%B8%E6%88%8F%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86/</link><pubDate>Mon, 03 Jun 2024 15:51:38 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/%E7%A0%B4%E8%A7%A3%E6%B8%B8%E6%88%8F%E6%96%87%E4%BB%B6%E5%8A%A0%E5%AF%86/</guid><description>&lt;p>俗话说，色色是宅男的第一生产力，当你看到游戏里有好看的色图时，第一反应肯定是想把它保存下来，以备后续“细细品鉴”，但是很多游戏就是喜欢搞点东西不让你保存，就算是用万能的截图大法也要给你放点游戏UI挡视野，这时候就只能解包了
过去游戏解包非常的公式化，只要搞清楚了打包的加密方式就行，但是这次的吊人属实狠，直接把原图都给加密了，虽然把包给解了，但是包里面还有一层加密，属实是恶心至极
必须干他一炮&lt;/p>
&lt;p>解开包以后发现img文件夹里全是sff文件，这文件搜了一下，也就mugen相关的能和图搭上关系，其他的简直八竿子打不着，先试着改改后缀名碰碰运气，只可惜运气不好&lt;/p>
&lt;p>这下必须上狠招了，直接看文件的magic number
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="image.png" src="https://godke.blog/imgs/20240603155843.jpg" />
&lt;/figure>
&lt;/p>
&lt;p>魔数居然是TJC，这完全不是正常文件的魔数，到魔数表里一查，根本没这个东西
&lt;a href="https://www.garykessler.net/library/file_sigs.html" target="_blank">File Signatures (garykessler.net)&lt;/a>&lt;/p>
&lt;p>这就有点头痛了，毕竟完全不知道是怎么加密来的，不过大概率不会是很恶心的加密，因为游戏使用这个数据的时候还要自己解码一遍，估计就是个很简单的加密&lt;/p>
&lt;p>先把前面的二进制直接放进搜索引擎试试
居然发现了一个有趣的东西
&lt;a href="https://bbs.kanxue.com/thread-199634.htm" target="_blank">打脸：看我如何用3天时间黑掉“网秦私密空间（NQ Vault）”-茶余饭后-看雪-安全社区|安全招聘|kanxue.com&lt;/a>&lt;/p>
&lt;p>可以看到PNG文件的魔数加密后恰好就是这个魔数，简直一模一样，于是我们可以确定这就是从PNG文件加密来的文件，还恶意改了个后缀名防破解&lt;/p>
&lt;p>这下故事就简单了，知道了加密数据和原数据，得到加密方式简直无比简单，逆向就更简单了
而且这个文件后续的一堆数据都是0x04，众所周知，图片文件中无色一般都是用0x00表示的，所以掩码就是0x04&lt;/p>
&lt;p>直接二进制破解，使用C加速，毕竟是逐字节运算&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">//cracker
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;stdlib.h&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="nf">main&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">FILE&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">cracked&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">chara&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">source&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;0.sff&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;rb&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">cracked&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fopen&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;0.png&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;wb&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="n">chara&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">fgetc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">EOF&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">fputc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">chara&lt;/span> &lt;span class="o">^&lt;/span> &lt;span class="mh">0x4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cracked&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">fclose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">source&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nf">fclose&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cracked&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">EXIT_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>解码后打开，图片正常显示，成功解决&lt;/p>
&lt;p>原本写个脚本提取所有sff文件批处理即可，但是最近发现powertoys里有一个很方便的可以展开全部文件夹的功能，我们直接把解包后的所有数据展开到一个文件夹里，然后按后缀名排序就能找到全部图片资源&lt;/p>
&lt;p>提取所有文件后，再把想要的用power rename全部改成简单的数列名称，简单使用c代码处理就好
PS：解散后一共3900个文件，这代码构造属实离谱，估计是直接生成的&lt;/p>
&lt;p>总的来说真正的难度还是在于解包，毕竟游戏运行时加密文件是要解密使用的，必然不会用很恶心的加密方式
也就挡挡普通人了&lt;/p>
&lt;p>色图太色，放出来有伤风化&lt;/p></description></item><item><title>ajax网站资源爬取</title><link>https://godke.blog/posts/tech/ajax%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90%E7%88%AC%E5%8F%96/</link><pubDate>Wed, 24 Apr 2024 19:11:53 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/ajax%E7%BD%91%E7%AB%99%E8%B5%84%E6%BA%90%E7%88%AC%E5%8F%96/</guid><description>&lt;p>最近想看周次，然后发现这小说现在似乎比较新，文库版还在出，找了半天勉强找到一二卷的台版，后面都没出版，肯定是没希望了，只好跑去猪先生给的百合会帖子下看&lt;/p>
&lt;p>这帖子说好也好，说不好真是问题一堆
首先就是我的手机端上似乎不显示目录，只能看评论区一个一个来，调成PC模式又唐得一批，字还小，只好到电脑上看，结果发现电脑上一样唐&lt;/p>
&lt;p>虽然它善良地把所有内容做到了一个网页上，还给了个目录，但是这个目录实在是太长了，每次想要跳到下一个episode都要划半天屏幕或者鼠标滚轮，麻烦得一批，所以最后还是考虑直接爬下来算了，反正自己最近也在玩爬虫，顺便搞搞复杂一点的&lt;/p>
&lt;p>首先这个网页的特性非常奇怪，众所周知的是网页一般点击一个按钮就会跳转到某个新的网页，或者以某种方式刷新一次，传给你一个新的网页，但是如果你点击这个网页的按钮来切换章节，就会发现这个网页的本体完全没有更新，只是部分元素更新了&lt;/p>
&lt;p>这一点有点熟悉，之前捣鼓自己网站的时候就有尝试一个技术栈，就是让网站到处跳转的时候只更新必要更新的内容，而现成的架构就是ajax，可以通过编写专门的方案控制网站元素更新&lt;/p>
&lt;p>当时我的想法就是文章间跳转只更新文章的内容和标题，以及刷新评论区，只可惜这个吊东西bug太多，写多了容易导致css不工作，整个网页的动画就会卡bug，没想到我想做的东西在这个网站复现了&lt;/p>
&lt;p>传统网页好爬是因为只要相应的修改域名，就可以直接get，但是这个网站如果用域名爬，永远都只能爬到第一个episode，而且你使用按钮切换章节后，域名是不变的，只是展示给你的东西变了&lt;/p>
&lt;p>打开网页进行调试，不出所料地看到了ajax的get申请
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="image.png" src="https://godke.blog/imgs/20240424194910.png" />
&lt;/figure>
&lt;/p>
&lt;p>因为ajax申请返回的东西就是网页变化的东西，也就是我们需要的小说的正文，所以其实不用每次都调取ajax-get后再爬取网页，直接把ajax返回的东西爬下来反而更方便&lt;/p>
&lt;p>根据约定，ajax-get是xhr请求，直接去网络调试把请求抓下来就行
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="image.png" src="https://godke.blog/imgs/20240424195320.png" />
&lt;/figure>
可以看到请求url里有post的id，也就是这个帖子的id，还有一个viewpid，这个就是当前展示页面的id
多尝试几次就会发现viewpid是唯一变化的东西，而且这个viewpid是根据更新时间来编号的
前两个episode的viewpid一个等于post的id，一个等于post的id加1，后面的加的更多，因为更新后viewpid会改变&lt;/p>
&lt;p>虽然我们无法直接依次轮询viewpid来爬取，但是这个viewpid很好找
因为就一般逻辑而言，viewpid肯定在按钮上保存了一份，不然就不知道按按钮更新什么&lt;/p>
&lt;p>查看目录元素，可以看到一堆viewpid
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="image.png" src="https://godke.blog/imgs/20240424195950.png" />
&lt;/figure>
我们直接把整个目录元素复制下来，然后提取pid就行
使用代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 正则表达式提取viewpid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">template&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;viewpid=\d&lt;/span>&lt;span class="si">{8}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">viewpid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">re&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">findall&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">template&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dic&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># dic即为目录元素&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后就是熟悉的破解网站的反爬虫机制
目前来看只要请求不要太快好像完全没有反爬
伪装一下headers就行，UA和cookies设置好似乎就没有问题了，其他的都不检查&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 获取请求header，主要是ua和cookie&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">headers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Accept&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;*/*&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Accept-Encoding&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;gzip, deflate, br, zstd&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Accept-Language&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,en-GB;q=0.6&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;Cookie&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">你的cookies&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;User-Agent&amp;#39;&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0.0.0 Safari/537.36 Edg/124.0.0.0&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>之后就是熟悉的分析爬到的东西了
ajax的get申请返回的东西其实挺规整的，因为ajax框架有严格的格式要求，必须声明需要更新的部分
但是这个作者的文章格式一团糟，完全没有章法，最后只能原封不动copy下来了&lt;/p>
&lt;p>两个定位器都是ajax的固有内容&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 直接检索并提取内容&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">head&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;id=&amp;#34;postmessage_&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">tail&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="sa">r&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&amp;#34;id=&amp;#34;comment_&amp;#34;&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后就是简单的循环，读写，处理标题，整个文本格式化啥的，轻车熟路
后续维护直接修改循环的开头就行，反正是apend模式&lt;/p>
&lt;p>最后爬下来的东西和项目在
&lt;a href="https://github.com/GodKeawa/zhouci" target="_blank">GodKeawa/zhouci: 一周一次买下同班同学的那些事 (github.com)&lt;/a>
tips: 现已设置为 private&lt;/p></description></item><item><title>如何让微软输入法输出时间戳</title><link>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%BE%AE%E8%BD%AF%E8%BE%93%E5%85%A5%E6%B3%95%E8%BE%93%E5%87%BA%E6%97%B6%E9%97%B4%E6%88%B3/</link><pubDate>Sun, 07 Apr 2024 14:28:04 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E8%AE%A9%E5%BE%AE%E8%BD%AF%E8%BE%93%E5%85%A5%E6%B3%95%E8%BE%93%E5%87%BA%E6%97%B6%E9%97%B4%E6%88%B3/</guid><description>&lt;p>输出时间戳是个好东西，但是非常多输入法都不提供自定义方法，如果提供多半就是十分阴间的大输入法&lt;/p>
&lt;p>于是就去研究了一下微软输入法输出时间的方法，然后发现几乎都是无效的&lt;/p>
&lt;p>特性上微软输入法确实会对&lt;code>%yyyy%&lt;/code>这种宏进行处理，但是阴间就阴间在win11以后，这种宏直接就提前转换了&lt;/p>
&lt;p>网上大部分教程都是直接设置自定义短语，然后使用
&lt;code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%&lt;/code>
然而实际上这样的短语定义根本就不是动态的，在输入这个短语后再次查看，就会发现短语已经被转译了
也就是说之后每次输出都是固定的时间&lt;/p>
&lt;p>这时候聪明人就会想了，那既然输入的时候会转译一次，那我再套一层不就行了
于是输入自定义短语
&lt;code>%%yyyy%%-%%MM%%-%%dd%% %%HH%%:%%mm%%:%%ss%%&lt;/code>
打开一看，果然被消掉了一层，现在框里显示的是
&lt;code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%&lt;/code>
这下总没有问题了吧&lt;/p>
&lt;p>然后去输入，发现阴间输入法又不转译了，直接输出了
&lt;code>%yyyy%-%MM%-%dd% %HH%:%mm%:%ss%&lt;/code>
真是服了&lt;/p>
&lt;p>之后去研究了一下微软输入法的特性，发现每次保存任意短语都会导致整个表被刷新转译一次
也就是说每次保存像&lt;code>%yyyy%&lt;/code>这样的宏都会少一层&lt;/p>
&lt;p>最后的解决方案竟然是
先输入&lt;code>%%yyyy%%-%%MM%%-%%dd%% %%HH%%:%%mm%%:%%ss%%&lt;/code>但是选择2号（或者其他位置）
然后再打开，修改成一号位置，保存
然后就能正常使用了，虽然这时候时间定格在了保存的时间，但实际上输出的时间却应用了宏&lt;/p>
&lt;p>简直是？？？
并且每次修改自定义表的任何东西都要重设一次，简直蛋疼&lt;/p>
&lt;p>不说了，直接安装quicker&lt;/p></description></item><item><title>如何白嫖Github Copilot并使用</title><link>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E7%99%BD%E5%AB%96github-copilot%E5%B9%B6%E4%BD%BF%E7%94%A8/</link><pubDate>Thu, 04 Apr 2024 22:05:51 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E7%99%BD%E5%AB%96github-copilot%E5%B9%B6%E4%BD%BF%E7%94%A8/</guid><description>&lt;p>开学季似乎有大量学生在申请Github学生包，而GitHub对这些申请又要人工审核，直接给我的申请拉满了时长，整整等了3天，不过总算还是通过了（写的等待时间是24-72小时）
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="image.png" src="https://godke.blog/imgs/20240404222526.jpg" />
&lt;/figure>
从3月31日提交申请算起，只算工作日，属于是用满了72小时
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="" src="https://godke.blog/imgs/20240404221302.jpg" />
&lt;/figure>
&lt;/p>
&lt;p>目前来说网上还是有挺多申请教程的，但是似乎都有些outdated，尤其是很多申请居然还需要填写各种东西&lt;/p>
&lt;h1 class="relative group">使用教育邮箱
&lt;div id="使用教育邮箱" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e4%bd%bf%e7%94%a8%e6%95%99%e8%82%b2%e9%82%ae%e7%ae%b1" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>目前的经验是，最好有一个教育邮箱绑定到自己的GitHub账号上，这样申请时选择教育邮箱再接个验证码认证一下，就可以直接进入提交材料的环节了&lt;/p>
&lt;h1 class="relative group">使用dns加速
&lt;div id="使用dns加速" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e4%bd%bf%e7%94%a8dns%e5%8a%a0%e9%80%9f" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>有很多教程都说不能开加速器，因为会要求共享地理位置，但实际上加速也有很多类型
这里推荐watt toolkit（原steam++）的host模式加速
原理就是中国的墙实际上是对steam进行dns污染，如果你使用中国的dns服务，那多半会被拒绝访问
但是也有很多dns服务是不墙steam的，比如cloudflare的，watt toolkit就支持让你直接使用指定的dns
这样你的ip地址和其他信息并没有变，只是为你提供域名解析服务的服务商变了，是可以通过地理认证的&lt;/p>
&lt;p>不过我直接用校园网访问，似乎没有问题&lt;/p>
&lt;h1 class="relative group">提交材料
&lt;div id="提交材料" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e6%8f%90%e4%ba%a4%e6%9d%90%e6%96%99" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>提交材料的初审是AI进行了，似乎只是检测一下有没有关键信息和材料的形式&lt;/p>
&lt;p>目前的建议是&lt;/p>
&lt;ul>
&lt;li>填写好GitHub账号的各种信息，最好和你准备提交的材料强相关&lt;/li>
&lt;li>填写好付款信息
&lt;ul>
&lt;li>这里注意一下最好不要填中国的地址，因为中国地址会禁止付款（中国政府规定的）&lt;/li>
&lt;li>反正我的已经禁止付款了，而且修改不了，如果是外国地址后续还可以修改&lt;/li>
&lt;li>不过不影响申请，还是能白嫖&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>设置好2FA，现在已经是强制要求了，可以用edge的插件，个人建议还是伪装成美国人，如果用edge插件一定要到插件设置页面做一个备份，2FA的恢复码也保存一下，不然你就会体验手机丢了要登录电脑微信的感觉
&lt;ul>
&lt;li>给你的某个设备（不能是华为）刷一个国际版安卓&lt;/li>
&lt;li>安装代理和GMS&lt;/li>
&lt;li>创建一个gmail&lt;/li>
&lt;li>愉快地使用Google play&lt;/li>
&lt;li>使用任意2FA软件，同步到云&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>材料使用翻译过的学信网认证材料
&lt;ul>
&lt;li>学信网下载学籍验证报告
&lt;ul>
&lt;li>&lt;a href="https://my.chsi.com.cn/archive/bab/index.action" target="_blank">学信档案 (chsi.com.cn)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>使用GitHub开源项目翻译报告
&lt;ul>
&lt;li>&lt;a href="https://github.com/Nagi-ovo/CHSI-Converter" target="_blank">Nagi-ovo/CHSI-Converter: 在线一键转化英文版学信档案 (github.com)&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>自己用word稍微调整一下格式然后做成pdf&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>一定要直接用手机拍，如果有条件可以把学生证和一卡通也拍进去，反正AI会检测各种信息
&lt;ul>
&lt;li>反正我是直接拍了报告就通过了&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>通过以后就是漫长的等待，似乎也不用自己主动领取，到账了直接上GitHub就能看到自己已经是GitHub Pro了&lt;/p></description></item><item><title>系统环境变量配置不生效</title><link>https://godke.blog/posts/tech/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E4%B8%8D%E7%94%9F%E6%95%88/</link><pubDate>Thu, 28 Mar 2024 11:30:51 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/%E7%B3%BB%E7%BB%9F%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E4%B8%8D%E7%94%9F%E6%95%88/</guid><description>&lt;p>&lt;strong>重启解决99%的问题&lt;/strong>&lt;/p>
&lt;p>非常值得吐槽的是系统环境变量竟然就存储在一个文件里
在powershell里使用命令&lt;code>$env:Path&lt;/code>即可查看文件内容
你甚至可以通过命令&lt;code>$env:Path += &amp;quot;;&amp;lt;路径&amp;gt;&amp;quot;&lt;/code>来实现对path的增加(&lt;strong>并不全局，见下文&lt;/strong>)&lt;/p>
&lt;p>既然是文件，就会有一个很蛋疼的地方
——对单个软件（或者其他使用path的程序）来说不实时更新&lt;/p>
&lt;p>比如说你打开了一个软件，这个软件需要你把某个路径加入path，这样软件才能正确调用&lt;/p>
&lt;ul>
&lt;li>首先你运行软件，发现报错了，显示找不到可执行文件&lt;/li>
&lt;li>然后你去搜了一下，发现是某个东西没加进path，软件检索不到&lt;/li>
&lt;li>于是你更改了path，但是没有重启软件，再次运行，还是检索不到&lt;/li>
&lt;li>这是因为软件启动时已经将path文件读入了，且不会故意再去读&lt;/li>
&lt;li>所以重启软件就能解决&lt;/li>
&lt;/ul>
&lt;p>但是更为惊喜的是我遇到的情况&lt;/p>
&lt;ul>
&lt;li>众所周知一些软件是可以唤出powershell的，比如我用的github desktop&lt;/li>
&lt;li>原本我认为powershell是单独的软件，启动时应该是自行初始化的&lt;/li>
&lt;li>但事实是，如果你不重启github desktop,无论你重启多少次powershell，这个powershell就是不更新path，甚至你调用&lt;code>$env:Path&lt;/code>方法读取到的内容也没有更新&lt;/li>
&lt;li>也就是说，由软件唤起的powershell会继承软件的一部分数据，包括读取到的path&lt;/li>
&lt;li>而&lt;code>$env:Path&lt;/code>方法并不是读取全局的path&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>经过一些调查可以发现&lt;/strong>
在 Windows 上，环境变量可以在三个作用域内定义：&lt;/p>
&lt;ul>
&lt;li>计算机（或系统）作用域&lt;/li>
&lt;li>用户范围&lt;/li>
&lt;li>流程范围&lt;/li>
&lt;/ul>
&lt;p>&lt;em>Process&lt;/em> 作用域包含当前进程或 PowerShell 会话中可用的环境变量。 该变量列表&lt;strong>继承自父进程&lt;/strong>，并由 &lt;em>Machine&lt;/em> 和 &lt;em>User&lt;/em> 作用域中的变量构造而成。&lt;/p>
&lt;p>&lt;strong>在 PowerShell 中更改环境变量时，更改仅影响当前会话&lt;/strong>。 此行为类似于 Windows 命令外壳中的 &lt;code>set&lt;/code> 命令和基于 UNIX 的环境中的 &lt;code>setenv&lt;/code> 命令的行为。 要更改 Machine 或 User 作用域中的值，必须使用 &lt;strong>System.Environment&lt;/strong> 类的方法。&lt;/p>
&lt;p>要更改计算机作用域的变量，还必须拥有相应权限。 如果你尝试在没有足够权限的情况下更改值，该命令将失败并且 PowerShell 将显示错误。&lt;/p></description></item><item><title>《把自己作为方法》</title><link>https://godke.blog/posts/book/%E6%8A%8A%E8%87%AA%E5%B7%B1%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95/</link><pubDate>Wed, 27 Mar 2024 19:58:24 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/book/%E6%8A%8A%E8%87%AA%E5%B7%B1%E4%BD%9C%E4%B8%BA%E6%96%B9%E6%B3%95/</guid><description>&lt;p>&lt;strong>《把自己作为方法——与项飙谈话》&lt;/strong>
一本挺非主流的对话体书籍，读着玩，感觉更像是文艺青年发表感想
很多东西经不起推敲，只能给个不同的视角，摘抄一点放着看看&lt;/p>
&lt;h1 class="relative group">摘录
&lt;div id="摘录" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e6%91%98%e5%bd%95" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;h2 class="relative group">政治意识
&lt;div id="政治意识" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e6%94%bf%e6%b2%bb%e6%84%8f%e8%af%86" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>八十年代不管哪个群体都有很强的政治意识。&lt;/li>
&lt;li>谈话也都是跟政治有关，对时局怎么评价，对政治人物怎么评价。&lt;/li>
&lt;li>后来我发现，普通人这么关心政治，关心社会变化，这在世界范围内其实很少。&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">叙述生活
&lt;div id="叙述生活" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%8f%99%e8%bf%b0%e7%94%9f%e6%b4%bb" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>你要在农村调查的话就会发现，在任何一个村都有人能把这个村子的事情说得很清楚。&lt;/li>
&lt;li>我们现在跟年轻人谈话，让他坐下来讲一下他们班、他们学校的事情，讲清楚这个体系是怎么运转的，基本的权力结构是什么，主导意识是什么，每个人的动机是什么，能够分成几类，大部分人都讲不出来。&lt;/li>
&lt;li>大家一定要对自己生活的小世界发生兴趣，有意识地用自己的语言把自己的生活讲出来，做一个独立的叙述——也不用分析，就是叙述。&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">“图景”
&lt;div id="图景" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%9b%be%e6%99%af" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>“图景”这个概念很重要，“理论”在拉丁文里就是“图景”的意思，给出一个理论，就是给出一个世界的图景。&lt;/li>
&lt;li>理论其实不是给出判断，而是给世界一个精确的图景，同时在背后透出未来可能的图景。&lt;/li>
&lt;li>“图景”有两层意思，一是现在的概括，再一个是未来可能的走向。&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">“文革”
&lt;div id="文革" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e6%96%87%e9%9d%a9" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>（在受文革影响的舅舅眼中）“文革”是一个典型的悲剧。&lt;/li>
&lt;li>所谓悲剧，如果回到古希腊的意思，就是一个潜在崇高的东西，不但崩溃了，还形成了巨大的破坏力。&lt;/li>
&lt;li>其实它背后延伸出来的是一种内在矛盾——社会主义革命确实要不断发动群众，防止官僚化，不能让人民的代表老坐小车、肚子越来越大，但用什么方法来阻止？这个问题还没有找到解决方法。&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">乡绅
&lt;div id="乡绅" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e4%b9%a1%e7%bb%85" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>乡绅首先不喜欢知识分子。
&lt;ul>
&lt;li>乡绅很重要的一点就是要把自己那个村的情况摸得很熟，能够形成一个叙述。而且这个叙述是很内在的。就是他能把多数人活在这个系统里面的味道讲出来，他能够说清楚这个系统是怎么靠里面的人和事叠加出来，而不是靠外在的逻辑推演，所有他用的语言也基本上是在地的语言，是行动者他们自己描述生活的语言。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>乡绅其次与调查员不同。
&lt;ul>
&lt;li>乡绅对细节的观察是要构造出一个图景，塑造出一个叙述，这个叙述要反映事实，而且要说给内部的人听，所以一方面可以说是很细致、很实证；另一方面又很注意总体的结构，这是很多现代调查员特别是统计方面的调查员不会注意的。&lt;/li>
&lt;li>乡绅会做伦理判断，在观察社会的时候要判断某个现象是好还是不好。调查员不搞这个，调查员要搞价值中立，只看事实，而事实对社会的意义不是他考虑的重点。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>乡绅最后与道德家不同。
&lt;ul>
&lt;li>乡绅的伦理判断不能完全按照书上写的标准来，他的伦理判断需要和老百姓的实践理性对得上。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">告老不还乡与现代化
&lt;div id="告老不还乡与现代化" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%91%8a%e8%80%81%e4%b8%8d%e8%bf%98%e4%b9%a1%e4%b8%8e%e7%8e%b0%e4%bb%a3%e5%8c%96" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;ul>
&lt;li>有人说，中国开始现代化的象征之一，就是官僚退休不回家乡了。&lt;/li>
&lt;li>城市与农村之间的循环性的关系被打断了。&lt;/li>
&lt;li>告老不还乡，点出了中国的中心和边缘的关系、城市与农村的关系、知识分子和普通群众（主要是农民）的关系，在现代发生了什么变化。&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">调子太高就很容易极端化
&lt;div id="调子太高就很容易极端化" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e8%b0%83%e5%ad%90%e5%a4%aa%e9%ab%98%e5%b0%b1%e5%be%88%e5%ae%b9%e6%98%93%e6%9e%81%e7%ab%af%e5%8c%96" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>为什么90年代新自由主义改革能够那么顺利的进行？
因为80年代没有给我们留下可以反思的资源。
——汪晖《当代中国的思想状况和现代性问题》&lt;/p></description></item><item><title>《工作、消费主义和新穷人》</title><link>https://godke.blog/posts/book/%E5%B7%A5%E4%BD%9C%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89%E5%92%8C%E6%96%B0%E7%A9%B7%E4%BA%BA/</link><pubDate>Wed, 27 Mar 2024 19:39:10 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/book/%E5%B7%A5%E4%BD%9C%E6%B6%88%E8%B4%B9%E4%B8%BB%E4%B9%89%E5%92%8C%E6%96%B0%E7%A9%B7%E4%BA%BA/</guid><description>&lt;p>&lt;strong>《工作、消费主义和新穷人》&lt;/strong>
挺有意思的一本书，当年高考结束后没事干就读了一次，那时候玩疯了，没读进去
之前莫名又得到了猪先生的推荐，才发现这本书还被带到学校来了
以我的能力实在是写不出什么有意义的东西，直接重读又显得很空洞，所以就想着做个笔记吧
其实说是笔记，基本上都是摘抄，又太久没有写字，就准备打字做
有一些结构性的组织，但基本还是照着原文来的，虽然都是抄，但也是自己一个字一个字打的
回过头来看确实有效果，至少脑子里印象深了很多&lt;/p>
&lt;h1 class="relative group">导言
&lt;div id="导言" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%af%bc%e8%a8%80" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;p>&lt;strong>Q:&lt;/strong> 穷人究竟如何而来？是什么导致了贫穷？社会大众（我们这些既不富裕也不贫穷的大多数）的生活方式在多大程度上制造出了贫穷？&lt;/p>
&lt;p>&lt;strong>A:&lt;/strong> 贫穷的含义取决于与他们同在的我们。&lt;/p>
&lt;p>&lt;strong>概况：&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>第一章：&lt;strong>工作伦理&lt;/strong>的起源&lt;/li>
&lt;li>第二章：现代社会从“生产者社会”到“&lt;strong>消费者社会&lt;/strong>”不可阻挡的过程以及产生的影响&lt;/li>
&lt;li>第三章：&lt;strong>福利国家&lt;/strong>的兴衰&lt;/li>
&lt;li>第四、五章：以一种&lt;strong>新&lt;/strong>的方式，穷人在社会上产生并在文化上被定义&lt;/li>
&lt;li>第六章：穷人和贫困问题的&lt;strong>未来&lt;/strong>&lt;/li>
&lt;/ol>
&lt;h1 class="relative group">第一章 工作的意义：创造工作伦理
&lt;div id="第一章-工作的意义创造工作伦理" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e7%ac%ac%e4%b8%80%e7%ab%a0-%e5%b7%a5%e4%bd%9c%e7%9a%84%e6%84%8f%e4%b9%89%e5%88%9b%e9%80%a0%e5%b7%a5%e4%bd%9c%e4%bc%a6%e7%90%86" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;h2 class="relative group">什么是工作伦理？
&lt;div id="什么是工作伦理" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%b7%a5%e4%bd%9c%e4%bc%a6%e7%90%86" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>简单来说，工作伦理本质上是一条&lt;strong>戒律&lt;/strong>，它有两个外显的前提和两个内隐的假设：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>前提&lt;/strong>
&lt;ul>
&lt;li>为了维持生活并获取快乐，每个人都必须做一些&lt;strong>他人认同&lt;/strong>的&lt;strong>有价值&lt;/strong>的事
即&lt;strong>获取之前需要先给予&lt;/strong>&lt;/li>
&lt;li>&lt;strong>安于现状，不思进取&lt;/strong>是&lt;strong>可耻&lt;/strong>的，&lt;strong>工作本身&lt;/strong>就具有价值，是一种崇高且鼓舞人心的活动&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>戒律的内容&lt;/strong>
&lt;ul>
&lt;li>即使你看不到任何&lt;strong>得获（你尚未拥有之物或你认为不需要之物）&lt;/strong>，你也应该继续工作。&lt;strong>工作即正义，不工作是一种罪恶&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>内隐假设&lt;/strong>
&lt;ul>
&lt;li>绝大多数人都有能力工作，可以通过出售工作能力获取相应收益，用以维持生活&lt;/li>
&lt;li>只有&lt;strong>公认的有价值&lt;/strong>的工作——那些可以要求薪水回报的，可以用于交易的——才会被工作伦理&lt;strong>认同&lt;/strong>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 class="relative group">工作伦理的产生
&lt;div id="工作伦理的产生" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%b7%a5%e4%bd%9c%e4%bc%a6%e7%90%86%e7%9a%84%e4%ba%a7%e7%94%9f" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;blockquote>
&lt;p>&lt;em>&lt;strong>每当有人谈论伦理，你都应当意识到一定有某些人对另一些人的行为方式不满，并希望他们有所改进。&lt;/strong>&lt;/em>&lt;/p></description></item><item><title>如何调试微信中的网页</title><link>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95%E5%BE%AE%E4%BF%A1%E4%B8%AD%E7%9A%84%E7%BD%91%E9%A1%B5/</link><pubDate>Wed, 20 Mar 2024 20:57:06 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/posts/tech/%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95%E5%BE%AE%E4%BF%A1%E4%B8%AD%E7%9A%84%E7%BD%91%E9%A1%B5/</guid><description>&lt;h1 class="relative group">导言
&lt;div id="导言" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%af%bc%e8%a8%80" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;blockquote>
&lt;p>众所周知，微信作为一款优秀的国产app，以其离谱的大小著称，且不谈其内置的输入法有多么的离谱，仅仅是微信内置的浏览器就已经技惊四座，作为一个使用CEF(&lt;a href="https://www.chromium.org/Home" target="_blank">Chromium Embedded Framework (CEF)&lt;/a> 是一个基于Google Chromium的开源项目)的软件，它&lt;strong>为了减少客户对微信体积过大的怨恨，&lt;em>善良&lt;/em>地将浏览器内置的调试工具删除了&lt;/strong>，导致我们无法对微信内的网页做任何操作，那么有什么办法可以解决呢？&lt;/p>&lt;/blockquote>
&lt;h1 class="relative group">User-Agent + Cookie（拉跨）
&lt;div id="user-agent--cookie拉跨" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#user-agent--cookie%e6%8b%89%e8%b7%a8" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h1>
&lt;h2 class="relative group">微信的User-Agent检查
&lt;div id="微信的user-agent检查" class="anchor">&lt;/div>
&lt;span
class="absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100">
&lt;a class="group-hover:text-primary-300 dark:group-hover:text-neutral-700"
style="text-decoration-line: none !important;" href="#%e5%be%ae%e4%bf%a1%e7%9a%84user-agent%e6%a3%80%e6%9f%a5" aria-label="Anchor">#&lt;/a>
&lt;/span>
&lt;/h2>
&lt;p>当你尝试用浏览器打开一部分微信内网页时，微信就会善良地提醒你
&lt;figure>
&lt;img class="my-0 rounded-md" loading="lazy" alt="" src="https://godke.blog/imgs/20240309134251.jpg" />
&lt;/figure>
&lt;/p>
&lt;p>这时我们查看网页源代码，就会发现这样一段检查&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">meta&lt;/span> &lt;span class="na">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;viewport&amp;#34;&lt;/span> &lt;span class="na">content&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;width=device-width, initial-scale=1, user-scalable=0&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">head&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">script&lt;/span> &lt;span class="na">type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;text/javascript&amp;#34;&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">ua&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">navigator&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">userAgent&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toLowerCase&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">isWeixin&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">ua&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;micromessenger&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">//isWeixin
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">isAndroid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">ua&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;android&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">isIos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ua&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;iphone&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">ua&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">indexOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;ipad&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="nx">isWeixin&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">head&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;title&amp;gt;抱歉，出错了&amp;lt;/title&amp;gt;&amp;lt;meta charset=&amp;#34;utf-8&amp;#34;&amp;gt;&amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1, user-scalable=0&amp;#34;&amp;gt;&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; type=&amp;#34;text/css&amp;#34; href=&amp;#34;https://res.wx.qq.com/open/libs/weui/0.4.1/weui.css&amp;#34;&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">innerHTML&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt;div class=&amp;#34;weui_msg&amp;#34;&amp;gt;&amp;lt;div class=&amp;#34;weui_icon_area&amp;#34;&amp;gt;&amp;lt;i class=&amp;#34;weui_icon_info weui_icon_msg&amp;#34;&amp;gt;&amp;lt;/i&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class=&amp;#34;weui_text_area&amp;#34;&amp;gt;&amp;lt;h4 class=&amp;#34;weui_msg_title&amp;#34;&amp;gt;请在微信客户端打开链接&amp;lt;/h4&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">body&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">html&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>不难发现isWeixin的检查是看UA里有没有micromessenger，它还善良地开了大小写兼容，我哭死&lt;/p></description></item><item><title>About Me</title><link>https://godke.blog/about/</link><pubDate>Thu, 26 Feb 2004 00:00:00 +0800</pubDate><author>3601262198@qq.com (GodKe)</author><guid>https://godke.blog/about/</guid><description>&lt;p>你好，我是 GodKe&lt;br>
这篇文章和我一样大&lt;/p></description></item></channel></rss>